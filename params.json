{"name":"Coreos-osx-gui-kubernetes-cluster","tagline":"CoreOS-Vagrant Kubernetes GUI for OS X","body":"CoreOS-Vagrant Kubernetes Cluster GUI for OS X\r\n============================\r\n\r\n`CoreOS-Vagrant Kubernetes Cluster GUI for Mac OS X` is a Mac Status bar App which works like a wrapper around [coreos-vagrant](https://github.com/coreos/coreos-vagrant) command line tool and bootstraps Kubernetes cluster with one master and two minions machines.\r\n \r\n[CoreOS](https://coreos.com) is a Linux distribution made specifically to run [Docker](https://www.docker.io/) containers.\r\n[CoreOS-Vagrant](https://github.com/coreos/coreos-vagrant) is made to run on VirtualBox and VMWare VMs.\r\n\r\n![CoreOS-Vagrant-Kubernetes-Cluster-GUI](coreos-vagrant-k8s-cluster-gui.png \"CoreOS-Vagrant-Kubernetes-Cluster-GUI\")\r\n\r\nDownload\r\n--------\r\nHead over to the [Releases Page](https://github.com/rimusz/coreos-osx-gui-kubernetes-cluster/releases) to grab the latest ZIP file.\r\n\r\n\r\nHow to install\r\n----------\r\n\r\nRequired software:\r\n* [VirtualBox for Mac OS X hosts](https://www.virtualbox.org/wiki/Downloads), [Vagrant for Mac OS X](http://www.vagrantup.com/downloads.html) and [iTerm 2](http://www.iterm2.com/#/section/downloads)\r\n* Unzip downloaded file and copy e.g. the App to Desktop.\r\n* Start the `CoreOS k8s Cluster` App and from menu `Setup` and choose: `Initial setup of CoreOS-Vagrant k8s Cluster` \r\n\r\nThe install will do the following:\r\n\r\n* All dependent files/folders will be put under `coreos-k8s-cluster` folder in the user's \r\n home folder\r\n* It will clone latest coreos-vagrant from git\r\n* user-data files will have fleet, etcd and flannel set\r\n* master machine will be set with IP `172.17.15.101` and two cluster nodes with IPs: `172.17.15.102 and 172.17.15.103`\r\n* It will download latest vagrant VBox and run vagrant up to initialise VM\r\n* It will download and install `fleetctl, etcdctl, kubectl and kubecfg` to `~/coreos-k8s-cluster/bin/`\r\n* Kubernetes services will be installed with fleet units which are placed in `~/coreos-k8s-cluster/fleet`, that allows if necessary very easely to update fleet units.\r\n\r\nHow it works\r\n------------\r\n\r\nJust start `CoreOS k8s Cluster` application and you will find a small icon with the CoreOS logo with (K) which means for k8s cluster in the Status Bar.\r\n\r\n* There you can `Up`, `Suspend`, `Halt`, `Reload` CoreOS vagrant VMs\r\n* Under `Up` (first does 'vagrant up') and `OS Shell` OS Shell (terminal) will have such environment set:\r\n````\r\n1) kubernetes master - export KUBERNETES_MASTER=http://172.17.15.101:8080\r\n2) etcd endpoint - export ETCDCTL_PEERS=http://172.17.15.101:4001\r\n3) fleetctl endpoint - export FLEETCTL_ENDPOINT=http://172.17.15.101:4001\r\n4) Path to ~/coreos-osx-cluster/bin where etcdclt, fleetctl and kubernetes binaries are stored\r\n````\r\n\r\n* `Updates/Force CoreOS update` will be run `sudo update_engine_client -update` on each CoreOS VM.\r\n* `Updates/Check for updates` will update etcdclt, fleetctl and kubernetes OS X clients to the same versions as CoreOS VMs run. \r\n* `SSH to k8smaster01 and k8snode-01/02` menu options will open VM shells\r\n* [Fleet-UI](http://fleetui.com) will show running fleet units and etc\r\n\r\nUsage\r\n------------\r\n\r\nYou're now ready to use Kubernetes cluster.\r\n\r\nSome examples to start with [Kubernetes examples](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/examples/).\r\n\r\nOther links\r\n-----------\r\n* A standalone CoreOS VM version App can be found here [CoreOS-Vagrant GUI](https://github.com/rimusz/coreos-osx-gui).\r\n\r\n* Cluster one without Kubernetes CoreOS VM App can be found here [CoreOS-Vagrant Cluster GUI](https://github.com/rimusz/coreos-osx-gui-cluster).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}